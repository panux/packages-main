packages:
  llvm:
    dependencies:
      - llvm-bin
      - libllvm
  llvm-headers:
  libllvm:
  llvm-bin:
    dependencies:
      - libllvm
version: 4.0.1
builddependencies:
- g++
- binutils-dev
- bison
- chrpath
- cmake
- file
- flex
- groff
- isl-dev
- libffi-dev
- make
- paxmark
- py-sphinx
- python2
- python2-dev
- zlib-dev
sources:
- https://releases.llvm.org/{{.Version}}/llvm-{{.Version}}.src.tar.xz
oneshell: true
data:
  cmake:
    -Wno-dev
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_VERBOSE_MAKEFILE=NO
    -DLLVM_BINUTILS_INCDIR=/usr/include
    -DLLVM_BUILD_DOCS=YES
    -DLLVM_BUILD_EXAMPLES=NO
    -DLLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=ON
    -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON
    -DLLVM_BUILD_TESTS=YES
    -DLLVM_DYLIB_EXPORT_ALL:BOOL=ON
    -DLLVM_ENABLE_ASSERTIONS=NO
    -DLLVM_ENABLE_CXX1Y=YES
    -DLLVM_ENABLE_FFI=YES
    -DLLVM_ENABLE_LIBCXX=NO
    -DLLVM_ENABLE_PIC=YES
    -DLLVM_ENABLE_RTTI=YES
    -DLLVM_ENABLE_SPHINX=YES
    -DLLVM_ENABLE_TERMINFO=YES
    -DLLVM_ENABLE_ZLIB=YES
    -DLLVM_INCLUDE_EXAMPLES=NO
    -DLLVM_LINK_LLVM_DYLIB:BOOL=ON
    -DLLVM_TARGETS_TO_BUILD=all
    -DSPHINX_WARNINGS_AS_ERRORS=NO
script:
- |
  curl https://git.alpinelinux.org/cgit/aports/plain/main/llvm4/llvm-fix-DynamicLibrary-to-build-with-musl-libc.patch?id=HEAD > llvm-fix-DynamicLibrary-to-build-with-musl-libc.patch
  curl https://reviews.llvm.org/file/data/n35uo3zj7ecmkxghkgnd/PHID-FILE-g62ekzl6tmu4lryqmweq/D34943.id105061.diff > redef.patch
  tar -xf src/llvm-{{.Version}}.src.tar.xz
  mv llvm-{{.Version}}.src llvm
  (cd llvm && rm test/tools/llvm-objdump/macho-compact-unwind-x86_64.test	test/tools/llvm-objdump/macho-compact-unwind-i386.test test/Transforms/GlobalOpt/alias-used.ll test/tools/llvm-symbolizer/print_context.c)
  (cd llvm && patch -p1 -i ../llvm-fix-DynamicLibrary-to-build-with-musl-libc.patch)
  (cd llvm/include && patch -p1 -i ../../redef.patch)
  mkdir llvm/build
  (cd llvm/build && cmake {{range .Data.cmake}} -{{.}}{{end}} ..)
  $(MAKE) -C llvm/build
  $(MAKE) -C llvm/build install DESTDIR=$(shell pwd)/out/llvm
  mv out/llvm/usr/local/* out/llvm/usr
  rm -r out/llvm/usr/local
  mkdir out/llvm-headers/usr
  mv out/llvm/usr/include out/llvm-headers/usr/include
  mkdir out/libllvm/usr
  mv out/llvm/usr/lib out/libllvm/usr/lib
  mkdir out/llvm-bin/usr
  mv out/llvm/usr/bin out/llvm-bin/usr/bin
  rm -r out/llvm/usr
